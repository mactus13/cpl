//===-- CplSubtarget.h - Define Subtarget for the Cpl -----------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Cpl specific subclass of TargetSubtarget.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_Cpl_CplSUBTARGET_H
#define LLVM_LIB_TARGET_Cpl_CplSUBTARGET_H

#include "CplFrameLowering.h"
#include "CplISelLowering.h"
#include "CplInstrInfo.h"
#include "CplSelectionDAGInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"
#include "llvm/Target/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "CplGenSubtargetInfo.inc"

namespace llvm {

class CplSubtarget : public CplGenSubtargetInfo {
  virtual void anchor();

public:
  enum CplArchEnum {
    V1
  };

  CplArchEnum CplArchVersion;
private:
  std::string CPUString;
  const DataLayout DL;       // Calculates type size & alignment.
  CplInstrInfo InstrInfo;
  CplTargetLowering TLInfo;
  CplSelectionDAGInfo TSInfo;
  CplFrameLowering FrameLowering;
  InstrItineraryData InstrItins;

public:
  CplSubtarget(StringRef TT, StringRef CPU, StringRef FS,
                   const TargetMachine &TM);

  /// getInstrItins - Return the instruction itineraries based on subtarget
  /// selection.
  const InstrItineraryData *getInstrItineraryData() const override {
    return &InstrItins;
  }
  const CplInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const CplRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
  const CplTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const CplFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const CplSelectionDAGInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
  const DataLayout *getDataLayout() const override { return &DL; }

  CplSubtarget &initializeSubtargetDependencies(StringRef CPU,
                                                    StringRef FS);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  const std::string &getCPUString () const { return CPUString; }

  const CplArchEnum &getCplArchVersion() const {
    return  CplArchVersion;
  }
};

} // end namespace llvm

#endif
